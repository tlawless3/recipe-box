//sets and stores recipes in local storage
var recipes = [{name:"Spaghetti",
                ingredients:["Tomato Sauce", "Noodles"],
                directions: "Cook Noodles, add sauce",
                }, 
                {name: "Bread",
                 ingredients:["Flour","Water","Yeast"],
                 directions: "Combine, then cook", 
                },];
localStorage.setItem("recipes", JSON.stringify(recipes));



class Table extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      recipes: JSON.parse(localStorage.getItem("recipes")),
    };
  }
  
  addRecipe(){
    var ingredientStr = $("#recipeIngredients").val();
    var ingredientArr = ingredientStr.split(",");
    
    var newRecipeObj = {
      name: $("#recipeName").val(),
      ingredients: ingredientArr,
      directions: $("#recipeDirections").val(),
    };
    
    console.log(newRecipeObj);
    
    recipes.push(newRecipeObj);
    console.log(recipes);
    localStorage.setItem("recipes", JSON.stringify(recipes));
    this.setState({
      recipes: JSON.parse(localStorage.getItem("recipes")),
    });
  }
  
  updateTable(){
    this.setState({
      recipes: JSON.parse(localStorage.getItem("recipes")),
    });
    console.log(this.state.recipes);
  }
  
  buildRecipes(){
    var sections = this.state.recipes.map(function(recipe, index){
      return(
      <Recipe
        recipe={recipe}
        key={index}
        updateTable={this.updateTable.bind(this)}
        />
      ) 
    }.bind(this));
    return sections;
  }
  
  render(){
    var recipes = this.buildRecipes();
    return(
    <div>
        {recipes}
        <Modal update={this.addRecipe.bind(this)}/>
    </div>
    )
  }
  
}

class Recipe extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      open: false,
      index: this.props.key,
    };
  }
  
  toggleState(){
    this.setState({
      open: !(this.state.open)
    })
  }
  
  getStatus(){
    if(this.state.open){
      return("open");
    } else {
      return("closed");
    }
  }
  
  deleteRecipe(){
    recipes.splice(this.props.key, 1);
    localStorage.setItem("recipes", JSON.stringify(recipes));
    this.props.updateTable();
    console.log(recipes);
  }
  
  render(){
    return(
    
    <div className="recipe">
        <h2 className="recipeName" onClick={this.toggleState.bind(this)}>{this.props.recipe.name}</h2>
        <div className={"recipeContent " + this.getStatus()}>
          {this.props.recipe.ingredients.map(function(ingredient, index){
            return(
            <p className="ingredients">{ingredient}</p>
            )
          })}
          <p className="directions">{this.props.recipe.directions}</p>
          <button type="button" className="btn btn-danger" onClick={this.deleteRecipe.bind(this)}>Delete Recipe</button>
          <button type = "button" className="btn">Edit Recipe</button>
        </div>
    </div>
    )
  }
}

//TODO comment code
class Modal extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      showModal: false,
    };
  }
  
  render(){
    return(
      <div>
        <button type="button" className="btn btn-primary addModalButton" data-toggle="modal" data-target="#myModal"> Add Recipe </button>
        <div className="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div className="modal-dialog" role="document">
            <div className="modal-content">
              <div className="modal-header">
                <h5 className="modal-title" id="ModalLabel">Add a recipe</h5>
                <button type="button" className="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div className="modal-body">
                <form id="recipeForm">
                  <div className="row recipeInput">
                  <input type="text" id="recipeName" placeholder="Name"></input>
                  </div>
                  <div className="row recipeInput">
                  <input type="text" id="recipeIngredients" placeholder="Ingredients, comma seperated"></input>
                  </div>
                  <div className="row recipeInput">
                  <input type="text" id="recipeDirections" placeholder="Directions"></input>
                  </div>
                </form>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" className="btn btn-primary" onClick={this.props.update} data-dismiss="modal">Submit</button>
              </div>
            </div>
          </div>
        </div>
        </div>
    )
  }
}

class App extends React.Component{
  render(){
    return(
      <div>
        <Table/>
      </div>
    )
  }
}

ReactDOM.render(
  <App/>,
  document.getElementById("root")
)